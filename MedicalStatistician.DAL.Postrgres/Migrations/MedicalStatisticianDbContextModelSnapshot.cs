// <auto-generated />
using System;
using MedicalStatistician.DAL.Entities.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MedicalStatistician.DAL.Postrgres.Migrations
{
    [DbContext(typeof(MedicalStatisticianDbContext))]
    partial class MedicalStatisticianDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MedicalOrganizationTypeOfMedicalCare", b =>
                {
                    b.Property<int>("MedicalOrganizationsId")
                        .HasColumnType("integer");

                    b.Property<int>("TypesOfMedicalCareId")
                        .HasColumnType("integer");

                    b.HasKey("MedicalOrganizationsId", "TypesOfMedicalCareId");

                    b.HasIndex("TypesOfMedicalCareId");

                    b.ToTable("MedicalOrganizationTypeOfMedicalCare");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Accommodations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.CauseOfDeath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CauseOfDeath");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.CauseOfDisability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CausesOfDisabilitiy");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.CertificateOfIncapacityForWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("ClosingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("CertificateOfIncapacityForWorks");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MedicalOrganizationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MedicalOrganizationId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Diagnosis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TreatmentCaseId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeOfDiagnosisId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TreatmentCaseId");

                    b.HasIndex("TypeOfDiagnosisId");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.DisabilityGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DisabilityGroups");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Disease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DiagnosisId")
                        .HasColumnType("integer");

                    b.Property<int?>("Mkb10Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeOfDiseaseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DiagnosisId");

                    b.HasIndex("Mkb10Id");

                    b.HasIndex("TypeOfDiseaseId");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.DiseaseOutcome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DiseaseOutcomes");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.HivTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsPositive")
                        .HasColumnType("boolean");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("HivTests");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.InsuranceOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InsuranceOrganizations");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Judgment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeOfForcedTreatmentId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeOfJudgmentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("TypeOfForcedTreatmentId");

                    b.HasIndex("TypeOfJudgmentId");

                    b.ToTable("Judgments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.MedicalCareProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MedicalCareProfiles");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.MedicalOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OkatoCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OkfsCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OkogyCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OkopfCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OktmoCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Okved2Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MedicalOrganizations");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.MethodOfConsumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MethodsOfConsumption");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.MKB10", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Actual")
                        .HasColumnType("integer");

                    b.Property<int?>("AdditionalCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MkbCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("MkbName")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("RecCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("MKB10");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.OrderOfAdmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderOfAdmissions");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.ParticipationInTheWar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ParticipationInTheWars");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccommodationsId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CauseOfDisabilityId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("DateOfOnsetOfIllness")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DisabilityGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("EducationId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("FirstConyactWithNarcologist")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<bool>("IsLivesWithAddict")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStudies")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUsedOthersSyringes")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("NumberOfCompletedClasses")
                        .HasColumnType("integer");

                    b.Property<int?>("ParticipationInTheWarId")
                        .HasColumnType("integer");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("ResidenceStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("SexId")
                        .HasColumnType("integer");

                    b.Property<int?>("SourceOfLivelihoodId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationsId");

                    b.HasIndex("CauseOfDisabilityId");

                    b.HasIndex("DisabilityGroupId");

                    b.HasIndex("EducationId");

                    b.HasIndex("ParticipationInTheWarId");

                    b.HasIndex("ResidenceStatusId");

                    b.HasIndex("SexId");

                    b.HasIndex("SourceOfLivelihoodId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.PatientEntryRoutes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PatientEntryRoutes");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.PatientUseDrugs", b =>
                {
                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<int>("PatientSubstanceId")
                        .HasColumnType("integer");

                    b.Property<int>("MethodOfConsumptionId")
                        .HasColumnType("integer");

                    b.Property<int>("StartUseDrugsAge")
                        .HasColumnType("integer");

                    b.HasKey("PatientId", "PatientSubstanceId");

                    b.HasIndex("MethodOfConsumptionId");

                    b.HasIndex("PatientSubstanceId");

                    b.ToTable("PatientUseDrugs");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.PlaceOfDeparture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlacesOfDeparture");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Policy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InsuranceOrganizationId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.HasIndex("InsuranceOrganizationId");

                    b.HasIndex("PatientId");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.PsychoactiveSubstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PsychoactiveSubstances");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.PurposeOfReferralForTreatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PurposeOfReferralForTreatment");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.ResidenceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ResidenceStatuses");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Sex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sex");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.SourceOfLivelihood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SourcesOfLivelihood");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.SourcesOfPaymentForMedicalCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SourcesOfPaymentForMedicalCares");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.StatusOfJudgesDecisionUnderArticle35", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StatusOfJudgesDecisionUnderArticle35");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TreatmentCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CauseOfDeathId")
                        .HasColumnType("integer");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<int>("DiseaseOutcomeId")
                        .HasColumnType("integer");

                    b.Property<string>("MedicalCardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfMedicalHolidays")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfMedicalLeaveDays")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfWorkingDaysInLtm")
                        .HasColumnType("integer");

                    b.Property<int>("OrderOfAdmissionId")
                        .HasColumnType("integer");

                    b.Property<int>("PatientEntryRoutesId")
                        .HasColumnType("integer");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<int>("PlaceOfDepartureId")
                        .HasColumnType("integer");

                    b.Property<int>("PurposeOfReferralForTreatmentId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("ReceiptDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("RetirementDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SourcesOfPaymentForMedicalCareId")
                        .HasColumnType("integer");

                    b.Property<string>("StatisticalCardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusOfJudgesDecisionUnderArticle35Id")
                        .HasColumnType("integer");

                    b.Property<int>("TypeOfDrugTreatmentId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeOfOutpatientCareId")
                        .HasColumnType("integer");

                    b.Property<int>("WhoSentToHospitalId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CauseOfDeathId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DiseaseOutcomeId");

                    b.HasIndex("OrderOfAdmissionId");

                    b.HasIndex("PatientEntryRoutesId");

                    b.HasIndex("PatientId");

                    b.HasIndex("PlaceOfDepartureId");

                    b.HasIndex("PurposeOfReferralForTreatmentId");

                    b.HasIndex("SourcesOfPaymentForMedicalCareId");

                    b.HasIndex("StatusOfJudgesDecisionUnderArticle35Id");

                    b.HasIndex("TypeOfDrugTreatmentId");

                    b.HasIndex("TypeOfOutpatientCareId");

                    b.HasIndex("WhoSentToHospitalId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfDiagnosis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypesOfDiagnosis");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfDisease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypesOfDisease");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfDrugTreatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeOfDrugTreatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfForcedTreatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypesOfForcedTreatment");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfJudgment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypesOfJudgment");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfMedicalCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int>("SortColumn")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("TypesOfMedicalCare");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfOutpatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeOfOutpatientCare");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.WhoSentToHospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WhoSentToHospital");
                });

            modelBuilder.Entity("MedicalOrganizationTypeOfMedicalCare", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.MedicalOrganization", null)
                        .WithMany()
                        .HasForeignKey("MedicalOrganizationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.TypeOfMedicalCare", null)
                        .WithMany()
                        .HasForeignKey("TypesOfMedicalCareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.CertificateOfIncapacityForWork", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.Patient", "Patient")
                        .WithMany("CertificateOfIncapacityForWork")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Department", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.MedicalOrganization", "MedicalOrganization")
                        .WithMany("Departments")
                        .HasForeignKey("MedicalOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.MedicalCareProfile", "Profile")
                        .WithMany("Departments")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("MedicalOrganization");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Diagnosis", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.TreatmentCase", "TreatmentCase")
                        .WithMany("Diagnoses")
                        .HasForeignKey("TreatmentCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.TypeOfDiagnosis", "TypeOfDiagnosis")
                        .WithMany("Diagnosis")
                        .HasForeignKey("TypeOfDiagnosisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TreatmentCase");

                    b.Navigation("TypeOfDiagnosis");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Disease", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.Diagnosis", "Diagnosis")
                        .WithMany("Diseases")
                        .HasForeignKey("DiagnosisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.MKB10", "Mkb10")
                        .WithMany("Diseases")
                        .HasForeignKey("Mkb10Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MedicalStatistician.DAL.Entities.TypeOfDisease", "TypeOfDisease")
                        .WithMany("Diseases")
                        .HasForeignKey("TypeOfDiseaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Diagnosis");

                    b.Navigation("Mkb10");

                    b.Navigation("TypeOfDisease");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Education", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.Education", "Parent")
                        .WithMany("Educations")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.HivTest", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.Patient", "Patient")
                        .WithMany("HivTests")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Judgment", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.Patient", "Patient")
                        .WithMany("Judgments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.TypeOfForcedTreatment", "TypeOfForcedTreatment")
                        .WithMany("Judgments")
                        .HasForeignKey("TypeOfForcedTreatmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.TypeOfJudgment", "TypeOfJudgment")
                        .WithMany("Judgments")
                        .HasForeignKey("TypeOfJudgmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("TypeOfForcedTreatment");

                    b.Navigation("TypeOfJudgment");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.MKB10", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.MKB10", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Patient", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.Accommodations", "Accommodations")
                        .WithMany("Patients")
                        .HasForeignKey("AccommodationsId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.CauseOfDisability", "CauseOfDisability")
                        .WithMany("Patients")
                        .HasForeignKey("CauseOfDisabilityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MedicalStatistician.DAL.Entities.DisabilityGroup", "DisabilityGroup")
                        .WithMany("Patients")
                        .HasForeignKey("DisabilityGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MedicalStatistician.DAL.Entities.Education", "Education")
                        .WithMany("Patients")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.ParticipationInTheWar", "ParticipationInTheWar")
                        .WithMany("Patients")
                        .HasForeignKey("ParticipationInTheWarId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MedicalStatistician.DAL.Entities.ResidenceStatus", "ResidenceStatus")
                        .WithMany("Patients")
                        .HasForeignKey("ResidenceStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.Sex", "Sex")
                        .WithMany("Patients")
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.SourceOfLivelihood", "SourceOfLivelihood")
                        .WithMany("Patients")
                        .HasForeignKey("SourceOfLivelihoodId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Accommodations");

                    b.Navigation("CauseOfDisability");

                    b.Navigation("DisabilityGroup");

                    b.Navigation("Education");

                    b.Navigation("ParticipationInTheWar");

                    b.Navigation("ResidenceStatus");

                    b.Navigation("Sex");

                    b.Navigation("SourceOfLivelihood");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.PatientUseDrugs", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.MethodOfConsumption", "MethodOfConsumption")
                        .WithMany("PatientUseDrugs")
                        .HasForeignKey("MethodOfConsumptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.Patient", "Patient")
                        .WithMany("PatientUseDrugs")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.PsychoactiveSubstance", "PatientSubstance")
                        .WithMany("PatientUseDrugs")
                        .HasForeignKey("PatientSubstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MethodOfConsumption");

                    b.Navigation("Patient");

                    b.Navigation("PatientSubstance");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Policy", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.InsuranceOrganization", "InsuranceOrganization")
                        .WithMany("Policies")
                        .HasForeignKey("InsuranceOrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.Patient", "Patient")
                        .WithMany("Policies")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsuranceOrganization");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TreatmentCase", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.CauseOfDeath", "CauseOfDeath")
                        .WithMany("Treatments")
                        .HasForeignKey("CauseOfDeathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.Department", "Department")
                        .WithMany("Treatments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.DiseaseOutcome", "DiseaseOutcome")
                        .WithMany("Treatments")
                        .HasForeignKey("DiseaseOutcomeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.OrderOfAdmission", "OrderOfAdmission")
                        .WithMany("Treatments")
                        .HasForeignKey("OrderOfAdmissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.PatientEntryRoutes", "PatientEntryRoutes")
                        .WithMany("Treatments")
                        .HasForeignKey("PatientEntryRoutesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.Patient", "Patient")
                        .WithMany("Treatments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.PlaceOfDeparture", "PlaceOfDeparture")
                        .WithMany("Treatments")
                        .HasForeignKey("PlaceOfDepartureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.PurposeOfReferralForTreatment", "PurposeOfReferralForTreatment")
                        .WithMany("Treatments")
                        .HasForeignKey("PurposeOfReferralForTreatmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.SourcesOfPaymentForMedicalCare", "SourcesOfPaymentForMedicalCare")
                        .WithMany("Treatments")
                        .HasForeignKey("SourcesOfPaymentForMedicalCareId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.StatusOfJudgesDecisionUnderArticle35", "StatusOfJudgesDecisionUnderArticle35")
                        .WithMany("Treatments")
                        .HasForeignKey("StatusOfJudgesDecisionUnderArticle35Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.TypeOfDrugTreatment", "TypeOfDrugTreatment")
                        .WithMany("Treatments")
                        .HasForeignKey("TypeOfDrugTreatmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.TypeOfOutpatientCare", "TypeOfOutpatientCare")
                        .WithMany("Treatments")
                        .HasForeignKey("TypeOfOutpatientCareId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalStatistician.DAL.Entities.WhoSentToHospital", "WhoSentToHospital")
                        .WithMany("Treatments")
                        .HasForeignKey("WhoSentToHospitalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CauseOfDeath");

                    b.Navigation("Department");

                    b.Navigation("DiseaseOutcome");

                    b.Navigation("OrderOfAdmission");

                    b.Navigation("Patient");

                    b.Navigation("PatientEntryRoutes");

                    b.Navigation("PlaceOfDeparture");

                    b.Navigation("PurposeOfReferralForTreatment");

                    b.Navigation("SourcesOfPaymentForMedicalCare");

                    b.Navigation("StatusOfJudgesDecisionUnderArticle35");

                    b.Navigation("TypeOfDrugTreatment");

                    b.Navigation("TypeOfOutpatientCare");

                    b.Navigation("WhoSentToHospital");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfMedicalCare", b =>
                {
                    b.HasOne("MedicalStatistician.DAL.Entities.TypeOfMedicalCare", "Parent")
                        .WithMany("MedicalCares")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Accommodations", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.CauseOfDeath", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.CauseOfDisability", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Department", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Diagnosis", b =>
                {
                    b.Navigation("Diseases");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.DisabilityGroup", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.DiseaseOutcome", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Education", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Patients");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.InsuranceOrganization", b =>
                {
                    b.Navigation("Policies");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.MedicalCareProfile", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.MedicalOrganization", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.MethodOfConsumption", b =>
                {
                    b.Navigation("PatientUseDrugs");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.MKB10", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Diseases");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.OrderOfAdmission", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.ParticipationInTheWar", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Patient", b =>
                {
                    b.Navigation("CertificateOfIncapacityForWork");

                    b.Navigation("HivTests");

                    b.Navigation("Judgments");

                    b.Navigation("PatientUseDrugs");

                    b.Navigation("Policies");

                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.PatientEntryRoutes", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.PlaceOfDeparture", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.PsychoactiveSubstance", b =>
                {
                    b.Navigation("PatientUseDrugs");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.PurposeOfReferralForTreatment", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.ResidenceStatus", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.Sex", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.SourceOfLivelihood", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.SourcesOfPaymentForMedicalCare", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.StatusOfJudgesDecisionUnderArticle35", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TreatmentCase", b =>
                {
                    b.Navigation("Diagnoses");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfDiagnosis", b =>
                {
                    b.Navigation("Diagnosis");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfDisease", b =>
                {
                    b.Navigation("Diseases");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfDrugTreatment", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfForcedTreatment", b =>
                {
                    b.Navigation("Judgments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfJudgment", b =>
                {
                    b.Navigation("Judgments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfMedicalCare", b =>
                {
                    b.Navigation("MedicalCares");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.TypeOfOutpatientCare", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("MedicalStatistician.DAL.Entities.WhoSentToHospital", b =>
                {
                    b.Navigation("Treatments");
                });
#pragma warning restore 612, 618
        }
    }
}
