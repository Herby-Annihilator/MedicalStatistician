@page "/catalogue/simple/{Name}"
@using MedicalStatistician.DAL.Entities.Base
@using MedicalStatistician.DAL.Repositories.Base

@inject ICrudRepository<Sex> sexCatalog
@inject ICrudRepository<DisabilityGroup> invalidGroupCatalog
@inject ICrudRepository<PurposeOfReferralForTreatment> purposeTreatmentCatalog
@inject ICrudRepository<WhoSentToHospital> whoSentToHospitalCatalog



<PageTitle>Справочник</PageTitle>

<h3 class="title">@Name</h3>
<p class="divider"></p>
<div class="object-right">
    <button class="btn btn-primary oi oi-plus" ></button>
    <button class="btn btn-primary oi oi-minus" ></button>
</div>  
@if (Collection != null)
{
    <div class="table-responsive">
        <table class="table table-striped">
            <thead class="thead-light">
                <tr>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Collection)
                {
                    <tr>
                        <td>
                           @* <input type="search" style="width:100%; border:0; background-color:transparent" @item.Name/>*@
                           @item.Name
                        </td>           
                    </tr>
                }          
            </tbody>

        </table>
    </div>
}
else
{
    <p>Загрузка...</p>
}
<div class="object-right">
    <button class="btn btn-primary" >Сохранить</button>
</div> 


@code
{
    [Parameter]
    public string Name { get; set; }

    dynamic Collection;

    protected override async Task OnInitializedAsync()
            {
            switch (Name)
            {
            case "Пол": Collection = (await sexCatalog.GetAllAsync()).ToList();
                break;
            case "Группы инвалидности": Collection = (await invalidGroupCatalog.GetAllAsync()).ToList();
                break;
            case "Цель направления": Collection = (await purposeTreatmentCatalog.GetAllAsync()).ToList();
                break;
            case "Кем направлен": Collection = (await whoSentToHospitalCatalog.GetAllAsync()).ToList();
                break;

            default:
                break;
            }
    }

}

